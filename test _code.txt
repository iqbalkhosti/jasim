# Just paste this into the iteration 1 file to do the same test that I did. 

# Example of adding a new car
new_car = {"ID": "6", "Make": "Tesla", "Model": "Model S", "Year": "2023", "Color": "Red"}
add_car(new_car)

# Example of checking if a car exists
if_exist("1")  # Should print "ID already exists."
if_exist("10")  # Should print "ID does not exist."

# Print catalog before removal
print("Catalog before removal:")
for item in catalog:
    print(item)

# Example of removing a car
remove_car("2")  # Should remove the Honda Civic from the catalog

# Print catalog after removal
print("Catalog after removal:")
for item in catalog:
    print(item)



# Test code for task 2

# Test Case 1: Exact Match (Make = "Toyota")
filters = {"Make": "Toyota"}
print("Test Case 1:", find_match_items(filters))  # Expected: ID 1

# Test Case 2: Multiple Filters (Make = "Honda", Model = "Civic")
filters = {"Make": "Honda", "Model": "Civic"}
print("Test Case 2:", find_match_items(filters))  # Expected: ID 2

# Test Case 3: No Match (Make = "Tesla")
filters = {"Make": "Tesla"}
print("Test Case 3:", find_match_items(filters))  # Expected: No items

# Test Case 4: Partial Match (Year = "2021")
filters = {"Year": "2021"}
print("Test Case 4:", find_match_items(filters))  # Expected: ID 3

# Test Case 5: Empty Filters
filters = {}
print("Test Case 5:", find_match_items(filters))  # Expected: All items (IDs 1, 2, 3, 4, 5)

# Test Case 6: Non-Existent Filter Key (Color = "Yellow")
filters = {"Color": "Yellow"}
print("Test Case 6:", find_match_items(filters))  # Expected: No item



# Test code for task 3
# Test Case 1: Exact Match
print("Test Case 1:", show_specif_car("Toyota", "Corolla", "2020", "Blue"))

# Test Case 2: No Match (Incorrect Details)
print("Test Case 2:", show_specif_car("Toyota", "Corolla", "2021", "Blue"))

# Test Case 3: Partial Match (Incorrect Color)
print("Test Case 3:", show_specif_car("Toyota", "Corolla", "2020", "Red"))

# Test Case 4: Non-Existent Car
print("Test Case 4:", show_specif_car("Tesla", "Model S", "2022", "Black"))

# Test Case 5: Case Sensitivity
print("Test Case 5:", show_specif_car("toyota", "corolla", "2020", "blue"))



# Test code for task 9
# Test the save_fav_car function
print("Initial favorite cars:", fav_cars) #$

# Save a car to favorites
save_fav_car("Toyota", "Corolla", 2020, "Blue")
print("Favorite cars after saving Toyota Corolla 2020 Blue:", fav_cars) #$

# Save another car to favorites
save_fav_car("Honda", "Civic", 2019, "Red")
print("Favorite cars after saving Tesla Model S 2022 Black:", fav_cars) #$

# Try to save a car that doesn't exist in the catalog
save_fav_car("Ford", "F-150", 2021, "Silver")
print("Favorite cars after attempting to save Ford F-150 2021 Silver:", fav_cars) #$



# Test code for testing task 10 in database_backend.py
if __name__ == "__main__":
    # Initialize the database
    db = Database()

    # Add some favorite cars to the fav_cars list for testing
    db.fav_cars = [
        {"ID": "1", "Make": "Toyota", "Model": "Corolla", "Year": "2020", "Color": "Red"},
        {"ID": "2", "Make": "Honda", "Model": "Civic", "Year": "2019", "Color": "Blue"},
        {"ID": "3", "Make": "Ford", "Model": "Mustang", "Year": "2021", "Color": "Black"}
    ]

    # Test filtering by Make
    print("Filtering by Make 'Toyota':")
    filtered_by_make = db.filter_fav_cars("Toyota")
    for car in filtered_by_make:
        print(car)

    # Test filtering by Color
    print("\nFiltering by Color 'Blue':")
    filtered_by_color = db.filter_fav_cars("Blue")
    for car in filtered_by_color:
        print(car)

    # Test filtering by a non-existent value
    print("\nFiltering by 'Green' (non-existent):")
    filtered_by_nonexistent = db.filter_fav_cars("Green")
    for car in filtered_by_nonexistent:
        print(car)

    # Test filtering by Year
    print("\nFiltering by Year '2021':")
    filtered_by_year = db.filter_fav_cars("2021")
    for car in filtered_by_year:
        print(car)